version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:6.0
    container_name: artist-portfolio-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: artist-portfolio
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/src/utils/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - artist-portfolio-network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: artist-portfolio-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/artist-portfolio?authSource=admin
      JWT_SECRET: super-secure-jwt-secret-for-production-change-this
      JWT_EXPIRES_IN: 7d
      CLIENT_URL: http://localhost:3000
      
      # Email Configuration (Replace with your values)
      EMAIL_SERVICE: gmail
      EMAIL_USER: your-email@gmail.com
      EMAIL_PASSWORD: your-app-specific-password
      ARTIST_EMAIL: artist@example.com
      
      # Cloudinary Configuration (Replace with your values)
      CLOUDINARY_CLOUD_NAME: your-cloudinary-cloud-name
      CLOUDINARY_API_KEY: your-cloudinary-api-key
      CLOUDINARY_API_SECRET: your-cloudinary-api-secret
    ports:
      - "5000:5000"
    depends_on:
      - mongodb
    volumes:
      - ./backend/uploads:/app/backend/uploads
    networks:
      - artist-portfolio-network

  # Frontend (for development - in production, serve from backend)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: artist-portfolio-frontend
    restart: unless-stopped
    environment:
      - REACT_APP_API_URL=http://localhost:5000/api
      - CHOKIDAR_USEPOLLING=true
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - artist-portfolio-network
    profiles:
      - dev

volumes:
  mongodb_data:
    driver: local

networks:
  artist-portfolio-network:
    driver: bridge
